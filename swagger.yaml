openapi: 3.0.0
info:
  title: Personal Budget API
  version: 1.0.0
  description: |
    API for managing budget envelopes and transactions.

    ## Envelopes
    - Create, read, update, delete envelopes
    - Transfer funds between envelopes

    ## Transactions
    - Record, read, update, delete transactions for envelopes
    - Each transaction affects an envelope's budget
servers:
  - url: http://localhost:3000
paths:
  /envelopes:
    get:
      summary: Get all envelopes
      responses:
        "200":
          description: List of envelopes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Envelope"
    post:
      summary: Create a new envelope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvelopeInput"
            example:
              name: Groceries
              amount: 500
      responses:
        "201":
          description: Envelope created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Envelope"
  /envelopes/{id}:
    get:
      summary: Get an envelope by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Envelope found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Envelope"
        "404":
          description: Envelope not found
    post:
      summary: Update envelope (subtract amount and/or change name)
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvelopeUpdate"
            example:
              name: Groceries
              amount: 50
      responses:
        "200":
          description: Envelope updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Envelope"
        "404":
          description: Envelope not found or insufficient amount
    delete:
      summary: Delete an envelope
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "204":
          description: Envelope deleted
        "404":
          description: Envelope not found
  /envelopes/transfer/{from}/{to}:
    post:
      summary: Transfer funds between envelopes
      parameters:
        - in: path
          name: from
          schema:
            type: integer
          required: true
        - in: path
          name: to
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
                - amount
            example:
              amount: 100
      responses:
        "200":
          description: Transfer successful
        "400":
          description: Insufficient funds or invalid request
  /envelopes/{id}/transactions:
    post:
      summary: Create a transaction for an envelope
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionInput"
            example:
              amount: 50
              recipient: "Supermarket"
      responses:
        "201":
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "404":
          description: Envelope not found
    get:
      summary: Get all transactions for an envelope
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /transactions:
    get:
      summary: Get all transactions
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /transactions/{id}:
    put:
      summary: Update a transaction
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionInput"
            example:
              date: "2025-07-13"
              amount: 75
              recipient: "Pharmacy"
      responses:
        "200":
          description: Transaction updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "404":
          description: Transaction not found
    delete:
      summary: Delete a transaction
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "204":
          description: Transaction deleted
        "404":
          description: Transaction not found
components:
  schemas:
    Envelope:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        amount:
          type: number
    EnvelopeInput:
      type: object
      properties:
        name:
          type: string
        amount:
          type: number
      required:
        - name
        - amount
    EnvelopeUpdate:
      type: object
      properties:
        name:
          type: string
        amount:
          type: number
      required:
        - name
        - amount
    Transaction:
      type: object
      properties:
        id:
          type: integer
        envelopes_id:
          type: integer
        date:
          type: string
          format: date
        amount:
          type: number
        recipient:
          type: string
    TransactionInput:
      type: object
      properties:
        amount:
          type: number
        recipient:
          type: string
        date:
          type: string
          format: date
      required:
        - amount
        - recipient
